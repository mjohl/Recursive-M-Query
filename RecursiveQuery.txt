let
    Source = (LastId,Entities,accessTokenStr) =>
	let
		siteApiUri = "https://mysitename-api.unily.com",
		EntitiesPerPage = 1000,

		GetJson = (Url, QueryStr) =>
			let Options = [
					Headers = [#"Authorization"= accessTokenStr, #"Content-Type"="application/json"],
					Content = Json.FromValue([query = QueryStr])
				],
				RawData = Web.Contents(Url, Options),
				Json = Json.Document(RawData)
			in  Json,

		Url   = siteApiUri & "/api/v1/search",
		Json  = GetJson(Url, "query GetNewsWithViewCount { content { byQueryText(queryText: ""+nodeTypeAlias:News +id:[0 TO " & Number.ToText(LastId) & "]"", sort: {field: ""id"", direction: ""desc""}, take: " & Number.ToText(EntitiesPerPage) & ") { totalRows data { id nodeName activity { viewCount lastReactionDate reactionCount }}}}}"),
		data = Json[data],
		content = data[content],
		byQueryText = content[byQueryText],
		memberData = byQueryText[data],
		totalRows = byQueryText[totalRows],

		lastRecordId = List.Last(memberData)[id] - 1,

		Entities = List.Combine({Entities, memberData}),

		output = if totalRows <= 0
		then Entities
		else GetNewsQuery(lastRecordId,Entities,accessTokenStr)
	in
		output
in
    Source
